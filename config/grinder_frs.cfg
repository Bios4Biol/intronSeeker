-tr 2000000
-rd 100 normal 7.5
-id 500 normal 250
-mo FR
-md poly4 3e-3 3.3e-8 
-mr 80 20 
-am uniform
-fq 1
-ql 32 2

#https://sourceforge.net/projects/biogrinder/files/
#   -tr <total_reads> | -total_reads <total_reads>
#        Number of shotgun or amplicon reads to generate for each library. Do
#        not specify this if you specify the fold coverage. Default: 100
#
#    -rd <read_dist>... | -read_dist <read_dist>...
#        Desired shotgun or amplicon read length distribution specified as:
#        average length, distribution ('uniform' or 'normal') and standard
#        deviation.
#
#        Only the first element is required. Examples:
#
#          All reads exactly 101 bp long (Illumina GA 2x): 101
#          Uniform read distribution around 100+-10 bp: 100 uniform 10
#          Reads normally distributed with an average of 800 and a standard deviation of 100
#            bp (Sanger reads): 800 normal 100
#          Reads normally distributed with an average of 450 and a standard deviation of 50
#            bp (454 GS-FLX Ti): 450 normal 50
#
#        Reference sequences smaller than the specified read length are not
#        used. Default: 100
#
#    -id <insert_dist>... | -insert_dist <insert_dist>...
#        Create paired-end or mate-pair reads spanning the given insert
#        length. Important: the insert is defined in the biological sense,
#        i.e. its length includes the length of both reads and of the stretch
#        of DNA between them: 0 : off, or: insert size distribution in bp, in
#        the same format as the read length distribution (a typical value is
#        2,500 bp for mate pairs) Two distinct reads are generated whether or
#        not the mate pair overlaps. Default: 0
#
#    -mo <mate_orientation> | -mate_orientation <mate_orientation>
#        When generating paired-end or mate-pair reads (see <insert_dist>),
#        specify the orientation of the reads (F: forward, R: reverse):
#
#           FR:  ---> <---  e.g. Sanger, Illumina paired-end, IonTorrent mate-pair
#           FF:  ---> --->  e.g. 454
#           RF:  <--- --->  e.g. Illumina mate-pair
#           RR:  <--- <---
#
#        Default: FR
#
#
#    -md <mutation_dist>... | -mutation_dist <mutation_dist>...
#        Introduce sequencing errors in the reads, under the form of
#        mutations (substitutions, insertions and deletions) at positions
#        that follow a specified distribution (with replacement): model
#        (uniform, linear, poly4), model parameters. For example, for a
#        uniform 0.1% error rate, use: uniform 0.1. To simulate Sanger
#        errors, use a linear model where the errror rate is 1% at the 5' end
#        of reads and 2% at the 3' end: linear 1 2. To model Illumina errors
#        using the 4th degree polynome 3e-3 + 3.3e-8 * i^4 (Korbel et al
#        2009), use: poly4 3e-3 3.3e-8. Use the <mutation_ratio> option to
#        alter how many of these mutations are substitutions or indels.
#        Default: uniform 0 0
#
#    -mr <mutation_ratio>... | -mutation_ratio <mutation_ratio>...
#        Indicate the percentage of substitutions and the number of indels
#        (insertions and deletions). For example, use '80 20' (4
#        substitutions for each indel) for Sanger reads. Note that this
#        parameter has no effect unless you specify the <mutation_dist>
#        option. Default: 80 20
#
#    -am <abundance_model>... | -abundance_model <abundance_model>...
#        Relative abundance model for the input reference sequences: uniform,
#        linear, powerlaw, logarithmic or exponential. The uniform and linear
#        models do not require a parameter, but the other models take a
#        parameter in the range [0, infinity). If this parameter is not
#        specified, then it is randomly chosen. Examples:
#
#          uniform distribution: uniform
#          powerlaw distribution with parameter 0.1: powerlaw 0.1
#          exponential distribution with automatically chosen parameter: exponential
#
#        Default: uniform 1
#
#
#    -ql <qual_levels>... | -qual_levels <qual_levels>...
#        Generate basic quality scores for the simulated reads. Good residues
#        are given a specified good score (e.g. 30) and residues that are the
#        result of an insertion or substitution are given a specified bad
#        score (e.g. 10). Specify first the good score and then the bad score
#        on the command-line, e.g.: 30 10. Default:
#
#    -fq <fastq_output> | -fastq_output <fastq_output>
#        Whether to write the generated reads in FASTQ format (with
#        Sanger-encoded quality scores) instead of FASTA and QUAL or not (1:
#        yes, 0: no). <qual_levels> need to be specified for this option to
#        be effective. Default: 0
#